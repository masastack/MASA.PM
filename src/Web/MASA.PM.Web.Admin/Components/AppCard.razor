<MHover Context="hoverContext" Class="d-flex flex-column">
    <MCard Class="hover-pointer" OnClick="OnClick" Outlined MinHeight="Height" @attributes="hoverContext.Attrs" Elevation="@(hoverContext.Hover ? 6 : 0)" Style="border-radius:10px !important; border: 1px solid #E2E7F4;">
        <MCardTitle Style="font-size: medium; flex-wrap:nowrap;">
            <div class="text-h7 text-overflow">@App.Name</div>
            <MSpacer />
            <div class="text-h7 text-overflow">@App.Type</div>
        </MCardTitle>
        <MCardSubtitle>
            <div class="text-caption text-overflow">@App.Identity</div>
            <div class="text-body3" style="display:-webkit-box;-webkit-line-clamp: 2;-webkit-box-orient: vertical;text-overflow: ellipsis;overflow: hidden;">@App.Description</div>
        </MCardSubtitle>
        <MCardActions Style="position:absolute;bottom:0;left:0;right:0; padding-bottom:16px !important;">
            <div class="d-flex flex-column" style="overflow:hidden; width:100%;">
                <div class="mx-2" Style="height:24px;white-space: nowrap;overflow: hidden;">
                    @foreach (var item in EnvironmentClusters)
                    {
                        <EnvClusterChip Style="margin:0 2px 1px 0;" EnvironmentName="@item.EnvironmentCluster.EnvironmentName" EnvironmentColor="@item.EnvironmentCluster.EnvironmentColor" ClusterName="@item.EnvironmentCluster.ClusterName" />
                    }
                </div>
                @if (ShowEditInfo)
                {
                    <div class="mx-2 d-flex justify-end text-caption text-overflow" style="margin:14px 0 0 0;">
                        @EditInfo
                    </div>
                }
            </div>
        </MCardActions>
    </MCard>
</MHover>

@code {
    [Parameter]
    public EventCallback<MouseEventArgs> OnClick { get; set; }

    [Parameter]
    public List<AppEnvironmentClusterDto> EnvironmentClusters { get; set; } = new();

    [Parameter]
    public AppDto App { get; set; } = new();

    [Parameter]
    public bool ShowEditInfo { get; set; }

    [Parameter]
    public string EditInfo { get; set; } = "";

    public int Height => ShowEditInfo ? 224 : 162;

    private async Task HandleOnClick()
    {
        if (OnClick.HasDelegate)
        {
            await OnClick.InvokeAsync();
        }
    }
}
