@page "/team"
@inherits PmCompontentBase
@inject MasaBlazor MasaBlazor

<MTabs @bind-Value="_curTab" SliderColor="transparent" class="pro-nav remover-ripple">
    <MTab class="text-capitalize pa-0">
        <ChildContent>
            <span class="mtab-tab-line mtab-tab-linear-primary"></span>
            <span class="rounded-circle mtab-tab-indicator mtab-tab-indicator-primary"></span>
            <span class="mtab-tab-title">@T("Project")</span>
        </ChildContent>
    </MTab>
    <MTab class="text-capitalize pa-0" Disabled="_teamDetailDisabled">
        <ChildContent>
            <span class="mtab-tab-line @(_curTab.ToInt32()>0?"mtab-tab-linear-primary":"mtab-tab-linear-neutral")"></span>
            <span class="rounded-circle mtab-tab-indicator @(_curTab.ToInt32()>0?"mtab-tab-indicator-primary":"mtab-tab-indicator-neutral")"></span>
            <span class="mtab-tab-title">@T("App")</span>
        </ChildContent>
    </MTab>
</MTabs>

<MTabsItems Value="_curTab" class="app-tab pt-6" Style="height: calc(100% - 24px) !important;">
    <MTabItem>
        <div class="d-flex full-height">
            <div class="pr-6" style="width: calc(100% - 300px); display:block;">
                <div class="rounded-5 pa-6 full-height" style="background:#fff;overflow: hidden;">
                    <div class="d-flex align-center mb-6">
                        <MTextField @bind-Value="_projectName" OnKeyDown="SearchProject" Class="rounded-2 mr-6" Height="40" Flat Dense Solo BackgroundColor="#F6F8FD" HideDetails="@("auto")" Placeholder="@T("Please enter the project name and press enter to query")">
                            <PrependInnerContent>
                                <MIcon Size=16 Class="mr-2 neutral-lighten-1--text">mdi-magnify</MIcon>
                            </PrependInnerContent>
                        </MTextField>
                        <MButton Class="rounded-pill" Color="primary" OnClick="()=>ShowProjectModalAsync()"><MIcon Small>mdi-plus </MIcon>@T("Add Project")</MButton>
                    </div>
                    <div style="margin:0 -24px; overflow:auto;">
                        <MExpansionPanels Flat Accordion>
                            @foreach (var project in _projects)
                            {
                                var apps = _apps.Where(app => app.ProjectId == project.Id).ToList();
                                <MExpansionPanel Style="margin-bottom: 12px;">
                                    <MExpansionPanelHeader>
                                        <span style="display:flex;align-items:center;margin-right:10px;">
                                            <div class="emphasis--text h6" @onclick:stopPropagation @onclick="()=>GetProjectDetailAsync(project.Id,apps.Count)">
                                                @project.Name
                                                <span class="ml-2 regular3--text btn">|</span>
                                                <sapn class="ml-1 regular3--text btn">@T("AppCount"):@apps.Count</sapn>
                                                <div class="regular3--text btn d-flex" style="padding:0">
                                                    @{
                                                        string backgroundColor;
                                                        switch (project.LabelName.ToLower())
                                                        {
                                                            case "basic ability":
                                                                backgroundColor = "#37D7AD";
                                                                break;
                                                            case "ops ability":
                                                                backgroundColor = "#FFB547";
                                                                break;
                                                            case "data factory":
                                                                backgroundColor = "#5FB9FF";
                                                                break;
                                                            default:
                                                                backgroundColor = "";
                                                                break;
                                                        }
                                                    }
                                                    <div class="d-flex justify-center mr-2" style="border-radius:6px; color:#fff; background-color:@backgroundColor; padding:0 4px;">
                                                        @project.LabelName
                                                    </div>
                                                    @project.Identity
                                                </div>
                                            </div>
                                            <MSpacer />
                                            <div style="display:flex;align-items:center;">
                                                <MButton Icon StopPropagation Class="mr-1" OnClick="()=>UpdateProjectAsync(project.Id)"><MIcon Size="20" Color="#485585">mdi-pencil</MIcon></MButton>
                                                <MDivider Vertical Style="height: 20px;margin: 7px 8px 0 8px;" />
                                            </div>
                                        </span>
                                    </MExpansionPanelHeader>
                                    <MExpansionPanelContent>
                                        <MRow>
                                            @foreach (var app in apps.Take(3))
                                            {
                                                <MCol Lg="4" Md="6" Sm="12">
                                                    <AppCard App="app" EnvironmentClusters="app.EnvironmentClusters"></AppCard>
                                                </MCol>
                                            }
                                        </MRow>
                                        <div class="d-flex justify-space-between mt-3">
                                            <div>
                                                <img style="height:24px;width:24px" src="/img/avatar/9.svg">
                                            </div>
                                            <div class="regular3--text btn">编辑于一小时前</div>
                                        </div>
                                    </MExpansionPanelContent>
                                </MExpansionPanel>
                            }

                        </MExpansionPanels>
                    </div>
                </div>
            </div>

            <MNavigationDrawer Right Permanent Class="rounded-4" Width="300">
                <div class="py-4 px-6" style="min-width:300px; display:flex; flex-direction:column; overflow: auto;">
                    <MAvatar>
                        <MImage Height="48" Width="48" Src="@_userTeam.Avatar"></MImage>
                    </MAvatar>
                    <MRow NoGutters Class="mt-6">
                        <div class="emphasis--text h6">@_userTeam.Name</div>
                    </MRow>
                    <MRow NoGutters Class="mt-1 text-body2">
                        @T("ProjectCount")：@_projects.Count
                    </MRow>
                    <MRow NoGutters Class="mt-4 text-body2">
                        @_userTeam.Description
                    </MRow>
                    <MRow NoGutters Class="regular3--text btn mt-6">@T("Admin")</MRow>
                    <MRow NoGutters Class="mt-4 text-body2">管理员</MRow>
                    <MRow NoGutters Class="regular3--text btn mt-6">@T("Members")</MRow>
                    <MRow NoGutters Class="mt-4 text-body2">成员1</MRow>
                </div>
            </MNavigationDrawer>
        </div>
    </MTabItem>
    <MTabItem>
        <div class="d-flex full-height">
            <MNavigationDrawer Right Permanent Class="rounded-4" Width="300">
                <div style="min-width:300px; padding:16px 24px; display:flex; flex-direction:column; align-items:center; overflow: auto;">
                    <div style="width:100%;" class="text-body2">
                        <MRow NoGutters Align="AlignTypes.Center" Justify="JustifyTypes.SpaceBetween">
                            <div class="emphasis--text h6">@_projectDetail.Name</div>
                            <MButton Icon OnClick="()=>UpdateProjectAsync(_selectProjectId)"><MIcon Color="#485585" Size="20">mdi-pencil</MIcon></MButton>
                        </MRow>
                        <MRow NoGutters Class="mt-4 regular--text body2">
                            @T("AppCount")：@_appCount
                        </MRow>
                        <MRow NoGutters Class="regular3--text btn">
                            @_projectDetail.Identity
                        </MRow>
                        <MRow NoGutters Class="mt-4">
                            @_projectDetail.Description
                        </MRow>
                        <MRow NoGutters Class="regular3--text btn mt-6">@T("Creator")</MRow>
                        <MRow NoGutters Class="mt-4">@_projectDetail.Creator</MRow>
                        <MRow NoGutters Class="regular3--text btn mt-6">@T("Participate team")</MRow>
                        <MRow NoGutters Class="mt-4">@_projectDetail.TeamId</MRow>
                        <MRow NoGutters Class="regular3--text btn mt-6">@T("Environment/Cluster")</MRow>
                        <div style="display:flex; flex-direction:column;align-items:start">
                            @{
                                var envCluster = allEnvClusters.Where(envCluster => _projectDetail.EnvironmentClusterIds.Contains(envCluster.Id));
                                foreach (var item in envCluster)
                                {
                                    <EnvClusterChip Class="mt-4" EnvironmentName="@item.EnvironmentName" EnvironmentColor="@item.EnvironmentColor" ClusterName="@item.ClusterName" />
                                }
                            }
                        </div>
                    </div>
                    <div style="width:100%; position: fixed; bottom:24px; right: 24px;" class="regular3--text body2 d-flex justify-end">@_projectDetail.CreationTime.ToString(T("$DateTimeFormat"))</div>
                </div>
            </MNavigationDrawer>

            <div class="pl-6" style="width: calc(100% - 300px); display:block;">
                <div class="rounded-5 pa-6 full-height" style="background:#fff;overflow: hidden;">
                    <div class="d-flex align-center mb-6">
                        <MTextField @bind-Value="_appName" OnKeyDown="SearchApp" Class="rounded-2 mr-6" Height="40" Flat Dense Solo BackgroundColor="#F6F8FD" HideDetails="@("auto")" Placeholder="@T("Please enter the app name and press enter to query")">
                            <PrependInnerContent>
                                <MIcon Size=16 Class="mr-2 neutral-lighten-1--text">mdi-magnify</MIcon>
                            </PrependInnerContent>
                        </MTextField>
                        <MButton Class="rounded-pill" Color="primary" OnClick="()=>ShowAppModal()"><MIcon Small>mdi-plus </MIcon>@T("Add App")</MButton>
                    </div>
                    <div class="full-height" style="margin:0 -24px; overflow:auto;">
                        <MRow Class="mx-3">
                            @{
                                foreach (var app in _projectApps)
                                {
                                    <MCol Lg="4" Md="6" Sm="12">
                                        <AppCard OnClick="()=>UpdateApp(app.Id)" ShowEditInfo EditInfo="@app.CreationTime.ToString(T("$DateTimeFormat"))" App="app" EnvironmentClusters="app.EnvironmentClusters"></AppCard>
                                    </MCol>
                                }
                            }
                        </MRow>
                    </div>
                </div>
            </div>
        </div>
    </MTabItem>
</MTabsItems>

<ProjectModal @ref="@_projectModal" Projects="_projects" OnSubmitProjectAfter="GetProjectListAsync" />


    <SheetDialog ValueChanged="AppValueChanged" Value="_appFormModel.Visible" Title="@(_appFormModel.HasValue ?T("Edit App"):T("Add App"))" Icon="mdi-circle" IconColor="success">
        <MForm Class="full-height" Context="formContext" EnableValidation Model="_appFormModel.Data">
            <div class="d-flex flex-column" style="width:100%; height:100%; padding: 48px 228px; overflow: hidden;">
                <div class="full-height">
                    <DefaultTextField Class="mt-6" Outlined Label="@T("App name")" @bind-Value="_appFormModel.Data.Name"></DefaultTextField>
                    <MSelect @bind-Value="_appFormModel.Data.Type"
                         Disabled="@(_appFormModel.HasValue)"
                         Items="Enum<AppTypes>.GetEnumObjectList<AppTypes>()"
                         ItemText="r=>r.Name"
                         ItemValue="r=>r.Value"
                         Class="mt-6"
                         Outlined
                         Label="@T("App type")">
                    </MSelect>
                    <FadeTransition>
                        <ShowTransitionElement Value="@(_appFormModel.Data.Type == AppTypes.Service)" Class="text-center">
                            <MSelect @bind-Value="_appFormModel.Data.ServiceType"
                                 Disabled="@(_appFormModel.HasValue)"
                                 Items="Enum<ServiceTypes>.GetEnumObjectList<ServiceTypes>()"
                                 ItemText="r=>r.Name"
                                 ItemValue="r=>r.Value"
                                 Outlined
                                 Class="mt-6"
                                 Label="@T("Service type")">
                            </MSelect>
                        </ShowTransitionElement>
                    </FadeTransition>
                    <DefaultTextField Class="mt-6" Outlined Label="Url" @bind-Value="_appFormModel.Data.Url"></DefaultTextField>
                    <FadeTransition>
                        <ShowTransitionElement Value="@(_appFormModel.Data.Type == AppTypes.Service)" Class="text-center">
                            <DefaultTextField Class="mt-6" Outlined Label="Swagger Url" @bind-Value="_appFormModel.Data.SwaggerUrl"></DefaultTextField>
                        </ShowTransitionElement>
                    </FadeTransition>
                    <DefaultTextField Class="mt-6" Disabled="@(_appFormModel.HasValue)" Outlined Label="ID" Placeholder="@T("If dapr is selected, the app identity format is recommended: app-id,divided by -")" @bind-Value="_appFormModel.Data.Identity"></DefaultTextField>
                    <MAutocomplete @bind-Value="_appFormModel.Data.EnvironmentClusterIds"
                               Items="_projectEnvClusters"
                               ItemText="r=>r.EnvironmentClusterName"
                               ItemValue="r=>r.Id"
                               Outlined
                               Class="mt-6"
                               Label="@T("Environment/Cluster")"
                               Multiple>
                        <SelectionContent Context="context">
                            <EnvClusterChip EnvironmentName="@context.Item.EnvironmentName" EnvironmentColor="@context.Item.EnvironmentColor" ClusterName="@context.Item.ClusterName" />
                        </SelectionContent>
                        <ItemContent>
                            <MListItemContent>
                                <div class="d-flex align-center">
                                    <div class="@($"{context.Item.EnvironmentColor}--text")">@context.Item.EnvironmentName</div><div class="ml-1">@context.Item.ClusterName</div>
                                </div>
                            </MListItemContent>
                        </ItemContent>
                    </MAutocomplete>
                    <MTextarea Class="mt-6" Outlined Label="@T("App description")" @bind-Value="_appFormModel.Data.Description"></MTextarea>
                    @if (_appFormModel.HasValue)
                {
                    <MRow Justify="JustifyTypes.SpaceBetween" Class="mt-6" Style="line-height:normal !important;">
                        <MCol Cols=6>@T("Creator"): @_appDetail.Creator</MCol>
                        <MCol Class="d-flex justify-end" Cols=6>@T("CreationTime"): @_appDetail.CreationTime.ToString(T("$DateTimeFormat"))</MCol>
                        <MCol Cols=6>@T("Modifier"): @_appDetail.Modifier</MCol>
                        <MCol Class="d-flex justify-end" Cols=6>@T("ModificationTime"): @_appDetail.ModificationTime.ToString(T("$DateTimeFormat"))</MCol>
                    </MRow>
                }
            </div>
            <div class="d-flex align-end" style="width:100%;">
                @if (_appFormModel.HasValue)
                {
                    <MButton Height="40" OnClick="RemoveAppAsync" Width=100 Class="rounded-pill" Text Color="red" Style="float:left;">@T("Remove")</MButton>
                }
                <MSpacer></MSpacer>
                <MButton Height="40" Class="rounded-pill" Color="primary" Width="100" OnClick="()=>SubmitAppAsync(formContext)">@(_appFormModel.HasValue ? T("Save") : T("Submit"))</MButton>
                </div>
            </div>
        </MForm>
    </SheetDialog>
