@page "/team"
@inherits ProCompontentBase
@inject MasaBlazor MasaBlazor
@inject GlobalConfig GlobalConfig;

<MTabs @bind-Value="_curTab" SliderColor="transparent" class="pro-nav remover-ripple">
    <MTab class="text-capitalize pa-0">
        <ChildContent>
            <span class="mtab-tab-line mtab-tab-linear-primary"></span>
            <span class="rounded-circle mtab-tab-indicator mtab-tab-indicator-primary"></span>
            <span class="mtab-tab-title">Card</span>
        </ChildContent>
    </MTab>
    <MTab class="text-capitalize pa-0" Disabled="_teamDetailDisabled">
        <ChildContent>
            <span class="mtab-tab-line @(_curTab.ToInt32()>0?"mtab-tab-linear-primary":"mtab-tab-linear-neutral")"></span>
            <span class="rounded-circle mtab-tab-indicator @(_curTab.ToInt32()>0?"mtab-tab-indicator-primary":"mtab-tab-indicator-neutral")"></span>
            <span class="mtab-tab-title">Address</span>
        </ChildContent>
    </MTab>
</MTabs>

<MTabsItems Value="_curTab" class="pt-6">
    <MTabItem>
        <div class="d-flex">
            <div class="pr-6" style="width: calc(100% - 300px); display:block;">
                    <div class="rounded-5 pa-6" style="background:#fff;overflow: hidden;">
                        <div class="d-flex mb-6">
                            <MTextField @bind-Value="_projectName" OnKeyDown="SearchProject" Class="rounded-2 mr-6" Height="40" Flat Dense Solo BackgroundColor="fill-lighten-1" HideDetails="@("auto")" Placeholder="@T("Please enter the project name and press enter to query")">
                                <PrependInnerContent>
                                    <MIcon Size=16 Class="mr-2 neutral-lighten-1--text">mdi-magnify</MIcon>
                                </PrependInnerContent>
                            </MTextField>
                            <MButton Class="rounded-pill" Color="primary" OnClick="()=>ShowProjectModalAsync()"><MIcon Small>mdi-plus </MIcon>@T("Add Project")</MButton>
                        </div>
                        <div style="margin:0 -24px; height: calc(100vh - 298px); overflow:auto;">
                            <MExpansionPanels Flat Accordion>
                                @foreach (var project in _projects)
                                {
                                    var apps = _apps.Where(app => app.ProjectId == project.Id).ToList();
                                    <MExpansionPanel Style="margin-bottom: 12px;">
                                        <MExpansionPanelHeader>
                                            <span style="display:flex;align-items:center;margin-right:10px;">
                                                <div class="text-h6" @onclick:stopPropagation @onclick="()=>GetProjectDetailAsync(project.Id,apps.Count)">
                                                    @project.Name
                                                    <span class="ml-2 text-caption">|</span>
                                                    <sapn class="ml-1 text-caption">@T("AppCount"):@apps.Count</sapn>
                                                    <div class="text-caption" style="padding:0">@project.Description</div>
                                                </div>
                                                <MSpacer />
                                                <div style="display:flex;align-items:center;">
                                                    <MButton Icon StopPropagation Class="mr-1" OnClick="()=>UpdateProjectAsync(project.Id)"><MIcon>mdi-pencil</MIcon></MButton>
                                                    <MDivider Vertical Style="height: 20px;margin: 7px 8px 0 8px;" />
                                                </div>
                                            </span>
                                        </MExpansionPanelHeader>
                                        <MExpansionPanelContent>
                                            <MRow>
                                                @foreach (var app in apps.Take(3))
                                                {
                                                    <MCol Lg="4" Md="6" Sm="12">
                                                        <AppCard App="app" EnvironmentClusters="app.EnvironmentClusters"></AppCard>
                                                    </MCol>
                                                }
                                            </MRow>
                                            <div class="d-flex justify-space-between mt-3">
                                                <div>
                                                    <img style="height:24px;width:24px" src="/img/avatar/9.svg">
                                                </div>
                                                <div class="text-caption">编辑于一小时前</div>
                                            </div>
                                        </MExpansionPanelContent>
                                    </MExpansionPanel>
                                }

                            </MExpansionPanels>
                        </div>
                    </div>
                </div>

            <MNavigationDrawer Right Permanent Class="rounded-4" Width="300" Style="height: calc(100vh - 186px);">
                    <div class="py-4 px-6" style="min-width:300px; display:flex; flex-direction:column; overflow: auto;">
                        <MAvatar>
                            <MImage Height="48" Width="48" Src="https://cdn.masastack.com/stack/images/website/masa-blazor/jack.png"></MImage>
                        </MAvatar>
                        <MRow NoGutters Class="mt-6">
                            <div class="text-h6">@T("Team name")</div>
                        </MRow>
                        <MRow NoGutters Class="mt-1 text-body2">
                            @T("ProjectCount")：@_projects.Count
                        </MRow>
                        <MRow NoGutters Class="mt-4 text-body2">
                            This is your team's workspace. Invite members to your team to start collaborating. Click here to edit this description.Professional team
                        </MRow>
                        <MRow NoGutters Class="text-caption mt-6">管理员</MRow>
                        <MRow NoGutters Class="mt-4 text-body2">管理员1</MRow>
                        <MRow NoGutters Class="text-caption mt-6">成员</MRow>
                        <MRow NoGutters Class="mt-4 text-body2">成员1</MRow>
                    </div>
                </MNavigationDrawer>
        </div>
    </MTabItem>
    <MTabItem>
        <div class="d-flex">
            <MNavigationDrawer Right Permanent Class="rounded-4" Width="300" Style="height: calc(100vh - 186px);">
                    <div style="min-width:300px; padding:16px 24px; display:flex; flex-direction:column; align-items:center; overflow: auto; height: calc(100vh - 218px);">
                        <div style="width:100%;" class="text-body2">
                            <MRow NoGutters Align="AlignTypes.Center" Justify="JustifyTypes.SpaceBetween">
                                <div class="text-h6">@_projectDetail.Name</div>
                                <MButton Icon OnClick="()=>UpdateProjectAsync(_selectProjectId)"><MIcon>mdi-pencil</MIcon></MButton>
                            </MRow>
                            <MRow NoGutters Class="mt-6">
                                @T("AppCount")：@_appCount
                            </MRow>
                            <MRow NoGutters Class="mt-4">
                                @_projectDetail.Description
                            </MRow>
                            <MRow NoGutters Class="text-caption mt-6">@T("Creator")</MRow>
                            <MRow NoGutters Class="mt-4">@_projectDetail.Creator</MRow>
                            <MRow NoGutters Class="text-caption mt-6">@T("Participate team")</MRow>
                            <MRow NoGutters Class="mt-4">@_projectDetail.TeamId</MRow>
                            <MRow NoGutters Class="text-caption mt-6">@T("Environment/Cluster")</MRow>
                            <div style="display:flex; flex-direction:column;align-items:start">
                                @{
                                    var envCluster = allEnvClusters.Where(envCluster => _projectDetail.EnvironmentClusterIds.Contains(envCluster.Id));
                                    foreach (var item in envCluster)
                                    {
                                        <EnvClusterChip Class="mt-4" EnvironmentName="@item.EnvironmentName" ClusterName="@item.ClusterName" />
                                    }
                                }
                            </div>
                        </div>
                        <MSpacer></MSpacer>
                        <div style="width:100%" class="text-caption d-flex justify-end mt-6">@_projectDetail.CreationTime.ToString("yyyy-MM-dd HH:mm:ss")</div>
                    </div>
                </MNavigationDrawer>

            <div class="pl-6" style="width: calc(100% - 300px); display:block;">
                    <div class="rounded-5 pa-6" style="background:#fff;overflow: hidden;">
                        <div class="d-flex mb-6">
                            <MTextField @bind-Value="_appName" OnKeyDown="SearchApp" Class="rounded-2 mr-6" Height="40" Flat Dense Solo BackgroundColor="fill-lighten-1" HideDetails="@("auto")" Placeholder="@T("Please enter the app name and press enter to query")">
                                <PrependInnerContent>
                                    <MIcon Size=16 Class="mr-2 neutral-lighten-1--text">mdi-magnify</MIcon>
                                </PrependInnerContent>
                            </MTextField>
                            <MButton Class="rounded-pill" Color="primary" OnClick="()=>ShowAppModal()"><MIcon Small>mdi-plus </MIcon>@T("Add App")</MButton>
                        </div>
                        <div style="margin:0 -24px; height: calc(100vh - 298px); overflow:auto;">
                            <MRow Class="mx-3">
                                @{
                                    foreach (var app in _projectApps)
                                    {
                                        <MCol Lg="4" Md="6" Sm="12">
                                            <AppCard OnClick="()=>UpdateApp(app.Id)" ShowEditInfo EditInfo="@app.CreationTime.ToString()" App="app" EnvironmentClusters="app.EnvironmentClusters"></AppCard>
                                        </MCol>
                                    }
                                }
                            </MRow>
                        </div>
                    </div>
                </div>
        </div>
    </MTabItem>
</MTabsItems>

<FormModal Visible="_projectFormModel.Visible"
           Title="@(_projectFormModel.HasValue ?$"{T("Edit Project")}":$"{T("Add Project")}")"
           Width="684"
           Model="_projectFormModel.Data"
           OnCancel="ProjectHide">
    <ChildContent>
        <MTextField Outlined Label="@T("Project name")" @bind-Value="_projectFormModel.Data.Name"></MTextField>
        <MAutocomplete @bind-Value="_friends"
                       Items="_people"
                       Chips
                       SmallChips
                       Outlined
                       Color="blue-grey lighten-2"
                       Label="@T("Project`s team")"
                       ItemText="r=>r.Name"
                       ItemValue="r=>r.Name"
                       Multiple>
            <SelectionContent Context="data">
                <MChip Small Close
                       OnCloseClick="()=>Remove(data.Item)">
                    <MAvatar Left>
                        <MImage Src="@data.Item.Avatar"></MImage>
                    </MAvatar>
                    @data.Item.Name
                </MChip>
            </SelectionContent>
            <ItemContent Context="data">
                @if (data.Item is not object)
                {
                    <MListItemContent>@data.Item</MListItemContent>
                }
                else
                {
                    <MListItemAvatar>
                        <img src="@data.Item.Avatar">
                    </MListItemAvatar>
                    <MListItemContent>
                        <MListItemTitle>
                            @((MarkupString)data.Item.Name)
                        </MListItemTitle>
                        <MListItemSubtitle>
                            @((MarkupString)data.Item.Group)
                        </MListItemSubtitle>
                    </MListItemContent>
                }
            </ItemContent>
        </MAutocomplete>
        <MTextField Disabled="@(_projectFormModel.HasValue)" Outlined Label="ID" @bind-Value="_projectFormModel.Data.Identity"></MTextField>
        <MSelect @bind-Value="_projectFormModel.Data.LabelId"
                 Disabled="@(_projectFormModel.HasValue)"
                 Items="_projectTypes"
                 ItemText="r=>r.Name"
                 ItemValue="r=>r.Id"
                 Outlined
                 Label="@T("Project type")">
        </MSelect>
        <MAutocomplete @bind-Value="_projectFormModel.Data.EnvironmentClusterIds"
                       Items="allEnvClusters"
                       ItemText="r=>r.EnvironmentClusterName"
                       ItemValue="r=>r.Id"
                       Outlined
                       Label="@T("Environment/Cluster")"
                       Multiple>
            <SelectionContent>
                <EnvClusterChip EnvironmentName="@context.Item.EnvironmentName" ClusterName="@context.Item.ClusterName" />
            </SelectionContent>
        </MAutocomplete>
        <MTextarea Outlined Label="@T("Project description")" @bind-Value="_projectFormModel.Data.Description"></MTextarea>
        @if (_projectFormModel.HasValue)
        {
            <MRow Justify="JustifyTypes.SpaceBetween" Style="line-height:normal !important;">
                <MCol Cols=6>@T("Creator"): @_projectDetail.Creator</MCol>
                <MCol Class="d-flex justify-end" Cols=6>@T("CreationTime"): @_projectDetail.CreationTime.ToString("yyyy-MM-dd HH:mm:ss")</MCol>
                <MCol Cols=6>@T("Modifier"): @_projectDetail.Modifier</MCol>
                <MCol Class="d-flex justify-end" Cols=6>@T("ModificationTime"): @_projectDetail.ModificationTime.ToString("yyyy-MM-dd HH:mm:ss")</MCol>
            </MRow>
        }
    </ChildContent>
    <ActionsContent>
        <div style="width:100%; margin:10px;">
            @if (_projectFormModel.HasValue)
            {
                <MButton OnClick="RemoveProjectAsync" Width=100 Class="rounded-pill" Text Color="red" Style="float:left;">@T("Remove")</MButton>
            }
            <MButton OnClick="SubmitProjectAsync" Width=100 Class="rounded-pill" Color="primary" Style="float:right;">@(_appFormModel.HasValue? T("Save") : T("Submit"))</MButton>
        </div>
    </ActionsContent>
</FormModal>

<FormModal Visible="_appFormModel.Visible"
           Title="@(_appFormModel.HasValue ?T("Edit App"):T("Add App"))"
           Width="684"
           Model="_appFormModel.Data"
           OnCancel="AppHide">
    <ChildContent>
        <MTextField Outlined Label="@T("App name")" @bind-Value="_appFormModel.Data.Name"></MTextField>
        <MSelect @bind-Value="_selectAppType"
                 Disabled="@(_appFormModel.HasValue)"
                 Items="Enum<AppTypes>.GetEnumObjectList()"
                 ItemText="r=>r.Name"
                 ItemValue="r=>r.Value"
                 Outlined
                 Label="@T("App type")">
        </MSelect>
        <FadeTransition>
            <Element Show="@(_selectAppType == (int)AppTypes.Service)" Class="text-center">
                <MSelect @bind-Value="_selectAppServiceType"
                         Disabled="@(_appFormModel.HasValue)"
                         Items="Enum<ServiceTypes>.GetEnumObjectList()"
                         ItemText="r=>r.Name"
                         ItemValue="r=>r.Value"
                         Outlined
                         Label="@T("Service type")">
                </MSelect>
            </Element>
        </FadeTransition>
        <MTextField Outlined Label="Url" @bind-Value="_appFormModel.Data.Url"></MTextField>
        <FadeTransition>
            <Element Show="@(_selectAppType == (int)AppTypes.Service)" Class="text-center">
                <MTextField Outlined Label="Swagger Url" @bind-Value="_appFormModel.Data.SwaggerUrl"></MTextField>
            </Element>
        </FadeTransition>
        <MTextField Disabled="@(_appFormModel.HasValue)" Outlined Label="ID" Placeholder="@T("If dapr is selected, the app identity format is recommended: app-id,divided by -")" @bind-Value="_appFormModel.Data.Identity"></MTextField>
        <MAutocomplete @bind-Value="_appFormModel.Data.EnvironmentClusterIds"
                       Items="_projectEnvClusters"
                       ItemText="r=>r.EnvironmentClusterName"
                       ItemValue="r=>r.Id"
                       Outlined
                       Label="@T("Environment/Cluster")"
                       Multiple>
            <SelectionContent Context="_context">
                <EnvClusterChip EnvironmentName="@_context.Item.EnvironmentName" ClusterName="@_context.Item.ClusterName" />
            </SelectionContent>
        </MAutocomplete>
        <MTextarea Outlined Label="@T("App description")" @bind-Value="_appFormModel.Data.Description"></MTextarea>
        @if (_appFormModel.HasValue)
        {
            <MRow Justify="JustifyTypes.SpaceBetween" Style="line-height:normal !important;">
                <MCol Cols=6>@T("Creator"): @_appDetail.Creator</MCol>
                <MCol Class="d-flex justify-end" Cols=6>@T("CreationTime"): @_appDetail.CreationTime.ToString("yyyy-MM-dd HH:mm:ss")</MCol>
                <MCol Cols=6>@T("Modifier"): @_appDetail.Modifier</MCol>
                <MCol Class="d-flex justify-end" Cols=6>@T("ModificationTime"): @_appDetail.ModificationTime.ToString("yyyy-MM-dd HH:mm:ss")</MCol>
            </MRow>
        }
    </ChildContent>
    <ActionsContent>
        <div style="width:100%; margin:10px;">
            @if (_appFormModel.HasValue)
            {
                <MButton OnClick="RemoveAppAsync" Width=100 Class="rounded-pill" Text Color="red" Style="float:left;">@T("Remove")</MButton>
            }
            <MButton OnClick="SubmitAppAsync" Width=100 Class="rounded-pill" Color="primary" Style="float:right;">@(_appFormModel.HasValue? T("Save") : T("Submit")))</MButton>
        </div>
    </ActionsContent>
</FormModal>


@code {
    //team
    private List<string> _friends = new()
        {
            "Sandra Adams",
            "Britta Holt"
        };

    public class Person
    {
        public Guid Id => Guid.NewGuid();

        public string Header { get; set; } = "";

        public string Name { get; set; } = "";

        public string Group { get; set; } = "";

        public string Avatar { get; set; } = "";

        public bool Divider { get; set; }
    }

    private List<Person> _people = new List<Person>
        {
            new Person
            {
                Name="Sandra Adams",
                Group="Group 1",
                Avatar="https://cdn.masastack.com/stack/images/website/masa-blazor/lists/1.png"
            },
            new Person
            {
                Name="Ali Connors",
                Group="Group 1",
                Avatar="https://cdn.masastack.com/stack/images/website/masa-blazor/lists/2.png"
            },
            new Person
            {
                Name="Trevor Hansen",
                Group="Group 1",
                Avatar="https://cdn.masastack.com/stack/images/website/masa-blazor/lists/3.png"
            },
            new Person
            {
                Name="Tucker Smith",
                Group="Group 1",
                Avatar="https://cdn.masastack.com/stack/images/website/masa-blazor/lists/2.png"
            },
            new Person
            {
                Divider=true,
                Name="Group 1"
            }
        };

    public void Remove(Person item)
    {
        var index = _friends.IndexOf(item.Name);
        if (index >= 0)
        {
            _friends.RemoveAt(index);
        }
    }
}
