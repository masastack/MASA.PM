@page "/Overview"
@inherits PmCompontentBase

<PageTitle>@T("Overview")</PageTitle>

<div class="d-flex full-height">

    <MNavigationDrawer Permanent Class="rounded-4" Width="242" Style="height: calc(100vh - 120px); overflow: hidden;">
        <div class="d-flex flex-column" style="min-width:242px; align-items:center; overflow: auto; height: calc(100vh - 200px);">
            <MList Width="194">
                <MListItemGroup Class="rounded-2"
                                @bind-Value="_selectedEnvId"
                                Mandatory
                                Color="#A3AED0">
                    @foreach (var env in _environments)
                    {
                        <MTooltip Left>
                            <ActivatorContent Context="tooltipContext">
                                <MListItem @attributes="@tooltipContext.Attrs" Class="rounded-2 env-list" Value="env.Id" Dense OnClick="@(()=>GetClustersByEnvIdAsync(env.Id))">
                                    <ItemContent>
                                        <MListItemIcon Class="d-flex align-center mr-0">
                                            <MIcon Color="@env.Color" Size="12">mdi-circle</MIcon>
                                        </MListItemIcon>
                                        <MListItemContent>
                                            <MListItemTitle>@env.Name</MListItemTitle>
                                        </MListItemContent>

                                        @if (context.Active)
                                        {
                                            <MListItemIcon Class="d-flex align-center">
                                                <MButton StopPropagation Icon OnClick="()=>UpdateEnvAsync(env.Id)">
                                                    <MIcon Size="18" Class="pencil">mdi-pencil</MIcon>
                                                </MButton>
                                            </MListItemIcon>
                                        }
                                    </ItemContent>
                                </MListItem>
                            </ActivatorContent>
                            <ChildContent>
                                <span>@env.Name</span>
                            </ChildContent>
                        </MTooltip>
                    }
                </MListItemGroup>
            </MList>
        </div>
        <MButton OnClick="()=>ShowEnvModalAsync()" Width="194" Tile Text Style="height: 54px; border-radius: 8px; border: 2px dashed #E9EDF7; position: fixed; left:24px; right:24px; bottom: 24px;">
            <MIcon Left>mdi-plus</MIcon> <span class="emphasis--text">@T("Add Environment")</span>
        </MButton>
    </MNavigationDrawer>

    <div class="pl-6 d-flex flex-column" style="width: calc(100% - 242px); overflow: hidden;">
        <MRow NoGutters Align="AlignTypes.Center" Class="env-toolbar rounded-5" Style="height:88px; background:#fff;padding:0 12px;">
            <MCard Style="padding-right: 150px;">
                <MTabs @key="_clusters" @bind-Value="_selectEnvClusterId" Class="cluster-tabs" BackgroundColor="#fff" ShowArrows="@(true)" ActiveClass="cluster-tab-active" HideSlider>
                    @foreach (var cluster in _clusters)
                    {
                        StringNumber envClusterId = (StringNumber)cluster.EnvironmentClusterId;
                        <MTab Style="height:40px; max-width:150px;" Value="envClusterId">
                            <MTooltip Top>
                                <ActivatorContent>
                                    <div class="text-overflow" @attributes="@context.Attrs">@cluster.Name</div>
                                </ActivatorContent>
                                <ChildContent>
                                    <span>@cluster.Name</span>
                                </ChildContent>
                            </MTooltip>
                            @if (cluster.EnvironmentClusterId == _selectEnvClusterId.AsT1)
                            {
                                <MButton StopPropagation Icon OnClick="()=>UpdateClusterAsync(cluster.Id)">
                                    <MIcon Size="18">mdi-pencil</MIcon>
                                </MButton>
                            }
                        </MTab>
                    }
                </MTabs>
            </MCard>
            <MButton OnClick="()=>ShowClusterModalAsync()" Tile Text Style="position:fixed; right:48px; height: 54px; border-radius: 8px; border: 2px dashed #E9EDF7;">
                <MIcon Left>mdi-plus</MIcon><span class="emphasis--text">@T("Add Cluster")</span>
            </MButton>
        </MRow>
        <div class="d-flex flex-column justify-space-between" style="height: calc(100vh - 208px); overflow:hidden;">
            <div class="mt-3" style="height:calc(100vh - 292px ); overflow: hidden; position: relative;">
                <ProjectList @ref="_projectListComponent"
                             FetchProjectCount="GetProjectCount"
                             CanAddApp
                             EnvironmentClusterId="_selectEnvClusterId.AsT1" />
            </div>
            <MButton Disabled=@(!_clusters.Any() || !_environments.Any()) Style="border-radius: 10px !important; background-color: #fff;" Height="54" OnClick="()=>ShowProjectModalAsync()" Tile>
                <MIcon Left>mdi-plus</MIcon><span class="emphasis--text">@T("Add Project")</span>
            </MButton>
        </div>
    </div>

</div>

<SSheetDialog EnableDomReload ValueChanged="EnvModalValueChanged" Value="_envFormModel.Visible" Title="@(_envFormModel.HasValue ? $"{T("Edit Environment")}":$"{T("Add Environment")}")" Icon="mdi-circle" IconColor="success">
    <MForm Class="full-height" Context="formContext" EnableValidation Model="_envFormModel.Data">
        <div class="d-flex flex-column" style="width:100%; height:100%; padding: 48px 228px; overflow: hidden;">
            <div class="full-height" style="overflow-x: hidden; overflow-y: auto;">
                <MRow NoGutters Justify="JustifyTypes.SpaceBetween" Align="AlignTypes.Center">
                    <MCol Cols="9" Class="pt-1">
                        <STextField TextColor="@_envFormModel.Data.Color" Class="pr-6" Outlined Label="@T("Name")" @bind-Value="_envFormModel.Data.Name"></STextField>
                    </MCol>
                    <MCol Cols="3" Align="AlignTypes.Start">
                        <SColorGroup @bind-Value="_envFormModel.Data.Color" Style="margin:24px 0;" Colors="_colors"></SColorGroup>
                    </MCol>
                </MRow>
                <SAutoComplete Class="mt-3" @bind-Value="_envFormModel.Data.ClusterIds"
                               Items="_allClusters"
                               ItemText="r=>r.Name"
                               ItemValue="r=>r.Id"
                               Outlined
                               Label="@T("Relation cluster")"
                               Chips
                               Multiple>
                    <SelectionContent Context="_context">
                        <MChip Close
                               OnCloseClick="()=>_envFormModel.Data.ClusterIds.RemoveAll(lusterId=>lusterId == _context.Item.Id)"
                               Class="text-btn"
                               Small
                               TextColor="#05CD99"
                               Color="#E6FAF5">
                            @_context.Item.Name
                        </MChip>
                    </SelectionContent>
                    <ItemContent>
                        <MListItemContent>@context.Item.Name</MListItemContent>
                    </ItemContent>
                </SAutoComplete>
                <MTextarea Class="mt-6" Outlined Label="@T("Description")" @bind-Value="_envFormModel.Data.Description"></MTextarea>
                @if (_envFormModel.HasValue)
                {
                    <MRow Justify="JustifyTypes.SpaceBetween" Class="pt-3 regular--text" Style="line-height:normal !important;">
                        <MCol Cols=6>@T("Creator"): @_envDetail.CreatorName</MCol>
                        <MCol Class="d-flex justify-end" Cols=6>
                            @T("CreationTime"):
                            <DateTimeZone Value="_envDetail.CreationTime" />
                        </MCol>
                        <MCol Cols=6>@T("Modifier"):@_envDetail.ModifierName</MCol>
                        <MCol Class="d-flex justify-end" Cols=6>
                            @T("ModificationTime"):
                            <DateTimeZone Value="_envDetail.ModificationTime" />
                        </MCol>
                        <MCol Cols=6>@T("ClusterCount")：@_envFormModel.Data.ClusterIds?.Count</MCol>
                    </MRow>
                }
            </div>
            <div class="d-flex align-end" style="width:100%;">
                @if (_envFormModel.HasValue)
                {
                    <MButton Height="40" OnClick="RemoveEnvAsync" Width=100 Class="rounded-pill" Text Color="red" Style="float:left;">@T("Delete")</MButton>
                }
                <MSpacer></MSpacer>
                <SButton Height="40" Class="rounded-pill" Color="primary" Width="100" OnClick="()=>SubmitEnvAsync(formContext)">@(_envFormModel.HasValue ? T("Save") : T("Submit"))</SButton>
                </div>
            </div>
        </MForm>
    </SSheetDialog>

    <SSheetDialog EnableDomReload ValueChanged="ClusterModalValueChanged" Value="_clusterFormModel.Visible" Title="@(_clusterFormModel.HasValue ? $"{T("Edit Cluster")}":$"{T("Add Cluster")}")" Icon="mdi-circle" IconColor="success">
        <MForm Class="full-height" Context="formContext" EnableValidation Model="_clusterFormModel.Data">
            <div class="d-flex flex-column" style="width:100%; height:100%; padding: 48px 228px; overflow: hidden;">
                <div class="full-height" style="overflow-x: hidden; overflow-y: auto;">
                    <STextField Class="mt-6" Outlined Label="@T("Name")" @bind-Value="_clusterFormModel.Data.Name"></STextField>
                    <SAutoComplete Class="mt-6" @bind-Value="_clusterFormModel.Data.EnvironmentIds"
                               Items="_allEnvs"
                               ItemText="r=>r.Name"
                               ItemValue="r=>r.Id"
                               Outlined
                               Label="@T("Relation environment")"
                               Chips
                               Multiple>
                        <SelectionContent Context="context">
                            <ColorChip Class="text-btn"
                                   Close
                                   OnCloseClick="()=>_clusterFormModel.Data.EnvironmentIds.RemoveAll(envId=>envId==context.Item.Id)"
                                   Small
                                   TextColor="@context.Item.Color">
                                @context.Item.Name
                            </ColorChip>
                        </SelectionContent>
                        <ItemContent>
                            <MListItemContent style="@($"color: {context.Item.Color} !important")">@context.Item.Name</MListItemContent>
                        </ItemContent>
                    </SAutoComplete>
                    <MTextarea Class="mt-6" Outlined Label="@T("Description")" @bind-Value="_clusterFormModel.Data.Description"></MTextarea>
                    @if (_clusterFormModel.HasValue)
                {
                    <MRow Class="pt-3" Justify="JustifyTypes.SpaceBetween" Style="line-height:normal !important;">
                        <MCol Cols=6>@T("Creator"): @_clusterDetail.CreatorName</MCol>
                        <MCol Class="d-flex justify-end" Cols=6>
                            @T("CreationTime"):
                            <DateTimeZone Value="_clusterDetail.CreationTime" />
                        </MCol>
                        <MCol Cols=6>@T("Modifier"): @_clusterDetail.ModifierName</MCol>
                        <MCol Class="d-flex justify-end" Cols=6>
                            @T("ModificationTime"):
                            <DateTimeZone Value="_clusterDetail.ModificationTime" />
                        </MCol>
                        <MCol Cols=6>@T("ProjectCount")：@_projectCount</MCol>
                    </MRow>
                }
            </div>
            <div class="d-flex align-end" style="width:100%;">
                @if (_clusterFormModel.HasValue)
                {
                    <MButton Height="40" OnClick="RemoveClusterAsync" Width=100 Class="rounded-pill" Text Color="red" Style="float:left;">@T("Delete")</MButton>
                }
                <MSpacer></MSpacer>
                <SButton Height="40" Class="rounded-pill" Color="primary" Width="100" OnClick="()=>SubmitClusterAsync(formContext)">@(_clusterFormModel.HasValue ? T("Save") : T("Submit"))</SButton>
                </div>
            </div>
        </MForm>
    </SSheetDialog>
