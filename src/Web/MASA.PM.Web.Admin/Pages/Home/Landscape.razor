@page "/Landscape"
@inherits PmCompontentBase

<div class="d-flex full-height">

    <MNavigationDrawer Permanent Class="rounded-4" Width="242" Style="height: calc(100vh - 120px); overflow: hidden;">
        <div class="d-flex flex-column" style="min-width:242px; align-items:center; overflow: auto; height: calc(100vh - 200px);">
            <MList Width="194">
                <MListItemGroup Class="rounded-2"
                                @bind-Value="_selectedEnvId"
                                Mandatory
                                Color="#A3AED0">
                    @foreach (var env in _environments)
                    {
                        <MListItem Style="height: 40px !important;" Class="rounded-2 env-list" Value="env.Id" Dense OnClick="@(()=>GetClustersByEnvIdAsync(env.Id))">
                            <ItemContent>
                                <MListItemIcon Class="d-flex align-center mr-0">
                                    <MIcon Color="@env.Color" Size="12">mdi-circle</MIcon>
                                </MListItemIcon>
                                <MListItemContent>
                                    <MListItemTitle>@env.Name</MListItemTitle>
                                </MListItemContent>
                                @if (context.Active)
                                {
                                    <MListItemIcon Class="d-flex align-center">
                                        <MButton StopPropagation Icon OnClick="()=>UpdateEnvAsync(env.Id)">
                                            <MIcon Size="18" Class="pencil">mdi-pencil</MIcon>
                                        </MButton>
                                    </MListItemIcon>
                                }
                            </ItemContent>
                        </MListItem>
                    }
                </MListItemGroup>
            </MList>
        </div>
        <MButton OnClick="()=>ShowEnvModalAsync()" Width="194" Tile Text Style="height: 54px; border-radius: 8px; border: 2px dashed #E9EDF7; position: fixed; left:24px; right:24px; bottom: 24px;">
            <MIcon Left>mdi-plus</MIcon> <span class="emphasis--text">@T("Add Environment")</span>
        </MButton>
    </MNavigationDrawer>

    <div class="pl-6 d-flex flex-column" style="width: calc(100% - 242px); overflow: hidden;">
        <MRow NoGutters Align="AlignTypes.Center" Class="env-toolbar rounded-5" Style="height:88px; background:#fff;padding:0 12px;">
            <MCard Style="padding-right: 150px;">

                <MTabs @bind-Value="_selectEnvClusterId" Class="cluster-tabs mt-2" BackgroundColor="#fff" ShowArrows="@(true)" ActiveClass="cluster-tab-active" HideSlider>
                    @foreach (var cluster in _clusters)
                    {
                        StringNumber envClusterId = (StringNumber)cluster.EnvironmentClusterId;
                        <MTab Style="height:40px; max-width:150px;" Value="envClusterId" OnClick="()=>GetProjectByEnvClusterIdAsync(cluster.EnvironmentClusterId)">
                            <MTooltip Top>
                                <ActivatorContent>
                                    <div class="text-overflow" @attributes="@context.Attrs">@cluster.Name</div>
                                </ActivatorContent>
                                <ChildContent>
                                    <span>@cluster.Name</span>
                                </ChildContent>
                            </MTooltip>
                            @if (cluster.EnvironmentClusterId == _selectEnvClusterId.AsT1)
                            {
                                <MButton StopPropagation Icon OnClick="()=>UpdateClusterAsync(cluster.Id)">
                                    <MIcon Size="18">mdi-pencil</MIcon>
                                </MButton>
                            }
                        </MTab>
                    }
                </MTabs>
            </MCard>
            <MButton OnClick="()=>ShowClusterModalAsync()" Tile Text Style="position:fixed; right:48px; height: 54px; border-radius: 8px; border: 2px dashed #E9EDF7;">
                <MIcon Left>mdi-plus</MIcon><span class="emphasis--text">@T("Add Cluster")</span>
            </MButton>
        </MRow>
        <div class="rounded-5 mt-6 py-2" style="background:#fff; height: calc(100vh - 232px); overflow:hidden;">
            <div class="mb-3" style="height: calc(100vh - 330px); overflow:auto;">
                <MExpansionPanels Flat Accordion>
                    @foreach (var project in _projects)
                    {
                        var apps = _apps.Where(app => app.ProjectId == project.Id && app.EnvironmentClusters.Select(envCluster => envCluster.Id).Contains(_selectEnvClusterId.AsT1)).ToList();
                        <MExpansionPanel Class="rounded-5">
                            <MExpansionPanelHeader>
                                <ChildContent>
                                    <span style="display:flex;align-items:center;margin-right:10px;">
                                        <div class="emphasis--text h6">
                                            @project.Name
                                            <span class="ml-2 regular3--text btn">|</span>
                                            <sapn class="ml-1 regular3--text btn">@T("AppCount"):@apps.Count</sapn>
                                            <div class="regular3--text btn d-flex" style="padding:0">
                                                @{
                                                    string backgroundColor;
                                                    switch (project.LabelCode.ToLower())
                                                    {
                                                        case "basicability":
                                                            backgroundColor = "#37D7AD";
                                                            break;
                                                        case "operator":
                                                            backgroundColor = "#FFB547";
                                                            break;
                                                        case "datafactory":
                                                            backgroundColor = "#5FB9FF";
                                                            break;
                                                        default:
                                                            backgroundColor = "#BDBDBD";
                                                            break;
                                                    }
                                                }
                                                <div class="d-flex justify-center mr-2" style="border-radius:6px; color:#fff; background-color:@backgroundColor; padding:0 4px;">
                                                    @project.LabelName
                                                </div>
                                                <span class="body2">@project.Identity</span>
                                            </div>
                                        </div>
                                        <MSpacer />
                                        <div style="display:flex;align-items:center;">
                                            <MButton Icon StopPropagation Class="mr-1" OnClick="()=>UpdateProjectAsync(project.Id)"><MIcon Size="20" Color="#485585">mdi-pencil</MIcon></MButton>
                                            <MDivider Vertical Style="height: 20px;margin: 7px 8px 0 8px;" />
                                        </div>
                                    </span>
                                </ChildContent>
                                <ActionsContent>
                                    <MIcon Color="#485585">
                                        mdi-chevron-down
                                    </MIcon>
                                </ActionsContent>
                            </MExpansionPanelHeader>
                            <MExpansionPanelContent>
                                <MRow>
                                    @foreach (var app in apps)
                                    {
                                        @if (app.ProjectId == project.Id)
                                        {
                                            <MCol Lg="4" Md="6" Sm="12">
                                                <AppCard App="app" EnvironmentClusters="app.EnvironmentClusters" OnClick="()=>UpdateAppAsync(app)"></AppCard>
                                            </MCol>
                                        }
                                    }
                                    <MCol Lg="4" Md="6" Sm="12">
                                        <MRow NoGutters>
                                            <MCol Class="pr-2">
                                                <MButton Height="162" OnClick="()=>ShowAppModalAsync(project.Id)" Tile Text Style="width: 100%; display: flex; justify-content: center; align-items: center; border-radius: 8px; border: 2px dashed #E9EDF7;">
                                                    <MIcon Left>mdi-plus</MIcon><span class="emphasis--text">@T("Add App")</span>
                                                </MButton>
                                            </MCol>
                                            <MCol>
                                                <MButton Height="162" OnClick="()=>ShowRelationAppModalAsync(project.Id)" Tile Text Style="width: 100%; display: flex; justify-content: center; align-items: center; border-radius: 8px; border: 2px dashed #E9EDF7;">
                                                    <MIcon Left>mdi-plus</MIcon><span class="emphasis--text">@T("Select an existing app")</span>
                                                </MButton>
                                            </MCol>
                                        </MRow>
                                    </MCol>
                                </MRow>
                                <div class="d-flex justify-space-between mt-3">
                                    <div>
                                        @{
                                            var team = _allTeams.FirstOrDefault(t => t.Id == project.TeamId) ?? new();
                                            <MTooltip Right>
                                                <ActivatorContent>
                                                    <MAvatar Size="24" @attributes="@context.Attrs">
                                                        <MImage Src="@team.Avatar"></MImage>
                                                    </MAvatar>
                                                </ActivatorContent>
                                                <ChildContent>
                                                    <span>@team.Name</span>
                                                </ChildContent>
                                            </MTooltip>
                                        }
                                    </div>
                                    <div class="regular3--text btn">@T("Edit in") @project.ModificationTime.Humanize(utcDate: false, culture:I18n.Culture)</div>
                                </div>
                            </MExpansionPanelContent>
                            <hr class="mx-6" style="background: none repeat scroll 0 0 #E9EDF7; border: thin none; height: 1px;" />
                        </MExpansionPanel>
                    }
                </MExpansionPanels>
            </div>
            <div style="position: static; z-index: 1;right: 48px;left: 48px;padding: 0 24px;">
                <MButton Height="54" OnClick="()=>ShowProjectModalAsync()" Tile Text Style="width: 100%; display: flex; border-radius: 8px; border: 2px dashed #E9EDF7;">
                    <MIcon Left>mdi-plus</MIcon><span class="emphasis--text">@T("Add Project")</span>
                </MButton>
            </div>
        </div>
    </div>

</div>

<SSheetDialog ValueChanged="EnvModalValueChanged" Value="_envFormModel.Visible" Title="@(_envFormModel.HasValue ? $"{T("Edit Environment")}":$"{T("Add Environment")}")" Icon="mdi-circle" IconColor="success">
    <MForm Class="full-height" Context="formContext" EnableValidation Model="_envFormModel.Data">
        <div class="d-flex flex-column" style="width:100%; height:100%; padding: 48px 228px; overflow: hidden;">
            <div class="full-height">
                <MRow NoGutters Justify="JustifyTypes.SpaceBetween" Align="AlignTypes.Center">
                    <MCol Cols="9">
                        <STextField TextColor="@_envFormModel.Data.Color" Class="pr-6" Outlined Label="@T("Environment name")" @bind-Value="_envFormModel.Data.Name"></STextField>
                    </MCol>
                    <MCol Cols="3" Align="AlignTypes.Start">
                        <SColorGroup @bind-Value="_envFormModel.Data.Color" Style="margin:24px 0;" Colors="_colors"></SColorGroup>
                    </MCol>
                </MRow>
                <MAutocomplete Class="mt-3" @bind-Value="_envFormModel.Data.ClusterIds"
                               Items="_allClusters"
                               ItemText="r=>r.Name"
                               ItemValue="r=>r.Id"
                               Outlined
                               Label="@T("Relation cluster")"
                               Multiple>
                    <SelectionContent Context="_context">
                        <MChip Outlined Class="text-btn" Small TextColor="sample-green" Color="sample-green-lighten-5">
                            @_context.Item.Name
                        </MChip>
                    </SelectionContent>
                    <ItemContent>
                        <MListItemContent>@context.Item.Name</MListItemContent>
                    </ItemContent>
                </MAutocomplete>
                <MTextarea Class="mt-6" Outlined Label="@T("Environment description")" @bind-Value="_envFormModel.Data.Description"></MTextarea>
                @if (_envFormModel.HasValue)
                {
                    <MRow Justify="JustifyTypes.SpaceBetween" Class="pt-3 regular--text" Style="line-height:normal !important;">
                        <MCol Cols=6>@T("Creator"): @_envDetail.CreatorName</MCol>
                        <MCol Class="d-flex justify-end" Cols=6>@T("CreationTime"): @_envDetail.CreationTime.ToString(T("$DateTimeFormat"))</MCol>
                        <MCol Cols=6>@T("Modifier"):@_envDetail.ModifierName</MCol>
                        <MCol Class="d-flex justify-end" Cols=6>@T("ModificationTime"): @_envDetail.ModificationTime.ToString(T("$DateTimeFormat"))</MCol>
                        <MCol Cols=6>@T("ClusterCount")：@_envFormModel.Data.ClusterIds?.Count</MCol>
                    </MRow>
                }
            </div>
            <div class="d-flex align-end" style="width:100%;">
                @if (_envFormModel.HasValue)
                {
                    <MButton Height="40" OnClick="RemoveEnvAsync" Width=100 Class="rounded-pill" Text Color="red" Style="float:left;">@T("Remove")</MButton>
                }
                <MSpacer></MSpacer>
                <MButton Height="40" Class="rounded-pill" Color="primary" Width="100" OnClick="()=>SubmitEnvAsync(formContext)">@(_envFormModel.HasValue ? T("Save") : T("Submit"))</MButton>
                </div>
            </div>
        </MForm>
    </SSheetDialog>

    <SSheetDialog ValueChanged="ClusterModalValueChanged" Value="_clusterFormModel.Visible" Title="@(_clusterFormModel.HasValue ? $"{T("Edit Cluster")}":$"{T("Add Cluster")}")" Icon="mdi-circle" IconColor="success">
        <MForm Class="full-height" Context="formContext" EnableValidation Model="_clusterFormModel.Data">
            <div class="d-flex flex-column" style="width:100%; height:100%; padding: 48px 228px; overflow: hidden;">
                <div class="full-height">
                    <STextField Outlined Label="@T("Cluster name")" @bind-Value="_clusterFormModel.Data.Name"></STextField>
                    <MAutocomplete Class="mt-6" @bind-Value="_clusterFormModel.Data.EnvironmentIds"
                               Items="_allEnvs"
                               ItemText="r=>r.Name"
                               ItemValue="r=>r.Id"
                               Outlined
                               Label="@T("Relation environment")"
                               Multiple>
                        <SelectionContent Context="context">
                            <MChip Outlined Class="text-btn" Small TextColor=@context.Item.Color Color="sample-green-lighten-5">
                                @context.Item.Name
                            </MChip>
                        </SelectionContent>
                        <ItemContent>
                            <MListItemContent Class="@($"{context.Item.Color}--text")">@context.Item.Name</MListItemContent>
                        </ItemContent>
                    </MAutocomplete>
                    <MTextarea Class="mt-6" Outlined Label="@T("Cluster description")" @bind-Value="_clusterFormModel.Data.Description"></MTextarea>
                @if (_clusterFormModel.HasValue)
                {
                    <MRow Class="pt-3" Justify="JustifyTypes.SpaceBetween" Style="line-height:normal !important;">
                        <MCol Cols=6>@T("Creator"): @_clusterDetail.CreatorName</MCol>
                        <MCol Class="d-flex justify-end" Cols=6>@T("CreationTime"): @_clusterDetail.CreationTime.ToString(T("$DateTimeFormat"))</MCol>
                        <MCol Cols=6>@T("Modifier"): @_clusterDetail.ModifierName</MCol>
                        <MCol Class="d-flex justify-end" Cols=6>@T("ModificationTime"): @_clusterDetail.ModificationTime.ToString(T("$DateTimeFormat"))</MCol>
                        <MCol Cols=6>@T("ProjectCount")：@_projects.Count</MCol>
                    </MRow>
                }
            </div>
            <div class="d-flex align-end" style="width:100%;">
                @if (_clusterFormModel.HasValue)
                {
                    <MButton Height="40" OnClick="RemoveClusterAsync" Width=100 Class="rounded-pill" Text Color="red" Style="float:left;">@T("Remove")</MButton>
                }
                <MSpacer></MSpacer>
                <MButton Height="40" Class="rounded-pill" Color="primary" Width="100" OnClick="()=>SubmitClusterAsync(formContext)">@(_clusterFormModel.HasValue ? T("Save") : T("Submit"))</MButton>
                </div>
            </div>
        </MForm>
    </SSheetDialog>

    <ProjectModal @ref="@_projectModal" EnvironmentClusterId="_selectEnvClusterId.AsT1" Projects="_projects" OnSubmitProjectAfter="GetProjectsByEnvIdAsync" />

    <AppModal @ref="@_appModal" OnSubmitProjectAfter="()=>GetAppByProjectIdsAsync(null)" />

    <SSheetDialog ValueChanged="RelationAppValueChanged" Value="_relationAppVisible" Title="@T("Add App")" Icon="mdi-circle" IconColor="success">
        <MForm Class="full-height" Context="formContext" EnableValidation Model="_addRelationAppModel">
            <div class="d-flex flex-column" style="width:100%; height:100%; padding: 48px 228px; overflow: hidden;">
                <div class="full-height">
                    <MAutocomplete TItem="AppDto"
                               TValue="int"
                               TItemValue="int"
                               Items="_canRelationApps"
                               ItemText="r=>r.Name"
                               ItemValue="r=>r.Id"
                               Class="mt-6"
                               Outlined
                               Value="_addRelationAppModel.AppId"
                               ValueChanged="RelationAppSelectChange"
                               Label="@T("Select an existing app")">
                        <SelectionContent Context="_context">
                            <MChip Class="text-btn" Small TextColor="sample-green" Color="sample-green-lighten-5">
                                @_context.Item.Name
                            </MChip>
                        </SelectionContent>
                    </MAutocomplete>
                    <MAutocomplete @bind-Value="_addRelationAppModel.EnvironmentClusterIds"
                               Class="mt-6"
                               Items="_projectEnvClusters"
                               ItemText="r=>r.EnvironmentClusterName"
                               ItemValue="r=>r.Id"
                               Outlined
                               Label="@T("Environment/Cluster")"
                               Multiple>
                        <SelectionContent Context="_context">
                            <EnvClusterChip EnvironmentName="@_context.Item.EnvironmentName" ClusterName="@_context.Item.ClusterName" />
                        </SelectionContent>
                        <ItemContent>
                            <MListItemContent>
                                <div class="d-flex align-center">
                                    <div class="@($"{context.Item.EnvironmentColor}--text")">@context.Item.EnvironmentName</div><div class="ml-1">@context.Item.ClusterName</div>
                                </div>
                            </MListItemContent>
                        </ItemContent>
                    </MAutocomplete>
                    <MSelect @bind-Value="_selectAppType"
                         Disabled
                         Class="mt-6"
                         Items="Enum<AppTypes>.GetEnumObjectList()"
                         ItemText="r=>r.Name"
                         ItemValue="r=>r.Value"
                         Outlined
                         Label="@T("App type")">
                    </MSelect>
                    <FadeTransition>
                        <ShowTransitionElement Value="@(_selectAppType == (int)AppTypes.Service)" Class="text-center">
                            <MSelect @bind-Value="_selectAppServiceType"
                                 Disabled
                                 Items="Enum<ServiceTypes>.GetEnumObjectList()"
                                 ItemText="r=>r.Name"
                                 ItemValue="r=>r.Value"
                                 Outlined
                                 Label="@T("Service type")">
                            </MSelect>
                        </ShowTransitionElement>
                    </FadeTransition>
                    <STextField Class="mt-6" Disabled Outlined Label="Url" @bind-Value="_appDetail.Url"></STextField>
                    <FadeTransition>
                        <ShowTransitionElement Value="@(_selectAppType == (int)AppTypes.Service)" Class="text-center">
                            <STextField Class="mt-6" Disabled Outlined Label="Swagger Url" @bind-Value="_appDetail.SwaggerUrl"></STextField>
                        </ShowTransitionElement>
                    </FadeTransition>
                    <STextField Class="mt-6" Disabled Outlined Label="ID" Placeholder="@T("If dapr is selected, the app identity format is recommended: app-id,divided by -")" @bind-Value="_appDetail.Identity"></STextField>
                    <MTextarea Class="mt-6" Disabled Outlined Label="@T("Cluster description")" @bind-Value="_appDetail.Description"></MTextarea>
                </div>
                <div class="d-flex align-end" style="width:100%;">
                    <MSpacer></MSpacer>
                    <MButton Height="40" Class="rounded-pill" Color="primary" Width="100" OnClick="()=>SubmitRelationAppAsync(formContext)">@T("Submit")</MButton>
                </div>
            </div>
        </MForm>
    </SSheetDialog>

