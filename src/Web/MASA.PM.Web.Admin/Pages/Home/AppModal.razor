@inherits PmCompontentBase

<SSheetDialog @key="@($"app-{_appFormModel.Visible}")" ValueChanged="AppModalValueChanged" Value="_appFormModel.Visible" Title="@(_appFormModel.HasValue ? T("Edit App"):T("Add App"))" Icon="mdi-circle" IconColor="success">
    <MForm Class="full-height" Context="formContext" EnableValidation Model="_appFormModel.Data">
        <div class="d-flex flex-column" style="width:100%; height:100%; padding: 48px 228px; overflow: hidden;">
            <div class="full-height mb-2" style="overflow-x: hidden; overflow-y: auto;">
                <STextField Class="mt-6" Outlined Label="@T("App name")" @bind-Value="_appFormModel.Data.Name"></STextField>
                <MSelect Value="_appFormModel.Data.Type"
                         ValueChanged="AppTypeValueChanged"
                         ValueExpression="()=>_appFormModel.Data.Type"
                         Disabled="@(_appFormModel.HasValue)"
                         Class="mt-6"
                         Items="Enum<AppTypes>.GetEnumObjectList<AppTypes>()"
                         ItemText="r=>r.Name"
                         ItemValue="r=>r.Value"
                         TItem="EnumObject<AppTypes>"
                         TItemValue="AppTypes"
                         TValue="AppTypes"
                         Outlined
                         MenuProps="p=>{p.OffsetY = true;}"
                         Label="@T("App type")">
                </MSelect>
                @if (_appFormModel.Data.Type == AppTypes.Service)
                {
                    <MSelect Class="mt-6"
                         @bind-Value="_appFormModel.Data.ServiceType"
                         Disabled="@(_appFormModel.HasValue)"
                         Items="Enum<ServiceTypes>.GetEnumObjectList<ServiceTypes>()"
                         ItemText="r=>r.Name"
                         ItemValue="r=>r.Value"
                         Outlined
                         Label="@T("Service type")">
                    </MSelect>
                }
                <STextField Class="mt-6" Disabled="@(_appFormModel.HasValue)" Outlined Label="ID" Placeholder="@T("If dapr is selected, the app identity format is recommended: app-id,divided by -")" @bind-Value="_appFormModel.Data.Identity"></STextField>
                <MAutocomplete Class="mt-6"
                               Value="_appFormModel.Data.EnvironmentClusterInfos.Select(e=>e.EnvironmentClusterId).ToList()"
                               Items="_projectEnvClusters"
                               ItemText="r=>r.EnvironmentClusterName"
                               ItemValue="r=> r.Id"
                               Outlined
                               Label="@T("Environment/Cluster")"
                               Multiple
                               TItem="EnvironmentClusterDto"
                               TItemValue="int"
                               TValue="List<int>"
                               OnSelectedItemUpdate="OnEnvironmentClusterSelectedItemUpdate">
                    <SelectionContent Context="context">
                        <EnvClusterChip EnvironmentName="@context.Item.EnvironmentName" EnvironmentColor="@context.Item.EnvironmentColor" ClusterName="@context.Item.ClusterName" />
                    </SelectionContent>
                    <ItemContent>
                        <MListItemContent>
                            <div class="d-flex align-center">
                                <div style="@($"color: {context.Item.EnvironmentColor} !important")">@context.Item.EnvironmentName</div><div class="ml-1">@context.Item.ClusterName</div>
                            </div>
                        </MListItemContent>
                    </ItemContent>
                </MAutocomplete>
                @{
                    foreach (var item in _appFormModel.Data.EnvironmentClusterInfos)
                    {
                        var environmentCluster = _projectEnvClusters.Find(p => p.Id == item.EnvironmentClusterId) ?? new();
                        <STextField Class="mt-6" Outlined Label="URL" @bind-Value="item.Url">
                            <PrependInnerContent>
                                <div class="mt-2 d-flex">
                                    <div style="@($"color: {environmentCluster.EnvironmentColor} !important")" class="text-overflow">@environmentCluster.EnvironmentName</div>
                                    <div style="color:#05CD99" class="text-overflow ml-1">@environmentCluster.ClusterName</div>
                                    <div class="mx-1 regular3--text">|</div>
                                </div>
                            </PrependInnerContent>
                        </STextField>
                    }

                    if (_appFormModel.Data.Type == AppTypes.Service)
                    {
                        foreach (var item in _appFormModel.Data.EnvironmentClusterInfos)
                        {
                            var environmentCluster = _projectEnvClusters.Find(p => p.Id == item.EnvironmentClusterId) ?? new();
                            <STextField Class="mt-6" Outlined Label="SwaggerURL" @bind-Value="item.SwaggerUrl">
                                <PrependInnerContent>
                                    <div class="mt-2 d-flex">
                                        <div style="@($"color: {environmentCluster.EnvironmentColor} !important")" class="text-overflow">@environmentCluster.EnvironmentName</div>
                                        <div style="color:#05CD99" class="text-overflow ml-1">@environmentCluster.ClusterName</div>
                                        <div class="mx-1 regular3--text">|</div>
                                    </div>
                                </PrependInnerContent>
                            </STextField>
                        }
                    }
                }
                <MTextarea Class="mt-6" Outlined Label="@T("App description")" @bind-Value="_appFormModel.Data.Description"></MTextarea>
                @if (_appFormModel.HasValue)
                {
                    <MRow Class="pt-3" Justify="JustifyTypes.SpaceBetween" Style="line-height:normal !important;">
                        <MCol Cols=6>@T("Creator"): @AppDetail.CreatorName</MCol>
                        <MCol Class="d-flex justify-end" Cols=6>@T("CreationTime"): @AppDetail.CreationTime.ToString(T("$DateTimeFormat"))</MCol>
                        <MCol Cols=6>@T("Modifier"): @AppDetail.ModifierName</MCol>
                        <MCol Class="d-flex justify-end" Cols=6>@T("ModificationTime"): @AppDetail.ModificationTime.ToString(T("$DateTimeFormat"))</MCol>
                    </MRow>
                }
            </div>
            <div class="d-flex align-end" style="width:100%;">
                @if (_appFormModel.HasValue)
                {
                    <MButton Height="40" OnClick="RemoveAppAsync" Width=100 Class="rounded-pill" Text Color="red" Style="float:left;">@T("Remove")</MButton>
                }
                <MSpacer></MSpacer>
                <MButton Height="40" Class="rounded-pill" Color="primary" Width="100" OnClick="()=>SubmitAppAsync(formContext)">@(_appFormModel.HasValue ? T("Save") : T("Submit"))</MButton>
                </div>
            </div>
        </MForm>
    </SSheetDialog>